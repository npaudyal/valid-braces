
//This is the clever way and shortest way to solve this problem.
public class BraceChecker {

  public boolean isValid(String braces) { 
    String b = braces;
    System.out.println(braces);   
    for(int i=0;i<braces.length()/2;i++)
    {
      b = b.replaceAll("\\(\\)", "");
      b = b.replaceAll("\\[\\]", "");
      b = b.replaceAll("\\{\\}", "");
      if(b.length() == 0)
        return true;
    }
    return false;
  }
}


// The way I did it

import java.util.*;

public class BraceChecker {

  public boolean isValid(String braces) {
    if (braces.equals("")) return false;
    
    Deque<Character> stack = new ArrayDeque<>();
  
    for (char c : braces.toCharArray()) {
      switch(c) {
        case '(': stack.push(')'); break;
        case '[': stack.push(']'); break;
        case '{': stack.push('}'); break;
        case ']':
        case ')':
        case '}': 
          if (stack.peek() == null || !stack.peek().equals(c)) return false; else stack.pop();
      }        
    }
    return stack.isEmpty() ? true : false;
  }

}
